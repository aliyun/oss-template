{
  "FormatVersion": "OOS-2019-06-01",
  "Description": {
    "name-en": "ACS::FC::InvokeFunction",
    "name-zh-cn": "执行函数(FC)",
    "en": "Invoke Created Function",
    "zh-cn": "执行创建的函数"
  },
  "Parameters": {
    "regionId": {
      "Label": {
        "en": "RegionId",
        "zh-cn": "地域ID"
      },
      "Type": "String",
      "Default": "{{ ACS::RegionId }}"
    },
    "serviceName": {
      "Label": {
        "en": "ServiceName",
        "zh-cn": "服务名称"
      },
      "Type": "String",
      "AssociationProperty": "ALIYUN::FC::Service::ServiceName",
      "AssociationPropertyMetadata": {
        "RegionId": "regionId"
      }
    },
    "functionName": {
      "Label": {
        "en": "FunctionName",
        "zh-cn": "函数名称"
      },
      "Type": "String",
      "AssociationProperty": "ALIYUN::FC::Function::FunctionName",
      "AssociationPropertyMetadata": {
        "RegionId": "regionId",
        "ServiceName": "serviceName"
      }
    },
    "invocationType": {
      "Label": {
        "en": "InvocationType",
        "zh-cn": "执行类型"
      },
      "Type": "String",
      "AllowedValues": [
        "Sync",
        "Async"
      ],
      "Default": "Sync"
    },
    "event": {
      "Label": {
        "en": "The parameters of function invocation",
        "zh-cn": "函数调用参数"
      },
      "Description": {
        "en": "JSON Format: {\"key\": \"value\"} Please refer to <a href=\"https://www.alibabacloud.com/help/en/functioncompute/user-guide/event-handlers#section-qv4-7ev-s0q\" target=\"_blank\">document</a>",
        "zh-cn": "JSON格式：{\"key\": \"value\"} 详情请<a href=\"https://help.aliyun.com/zh/functioncompute/user-guide/event-handlers#section-qv4-7ev-s0q\" target=\"_blank\">参考</a>"
      },
      "Type": "String",
      "Default": ""
    }
  },
  "Tasks": [
    {
      "Name": "invokeFunction",
      "Action": "ACS::ExecuteAPI",
      "Description": {
        "en": "Invokes function",
        "zh-cn": "执行函数"
      },
      "Properties": {
        "Service": "FC-OPEN",
        "API": "InvokeFunction",
        "Method": "POST",
        "URI": "/services/{{serviceName}}/functions/{{functionName}}/invocations",
        "Headers": {
          "X-Fc-Invocation-Type": "{{ invocationType }}",
          "X-Fc-Stateful-Async-Invocation-Enable": {
            "Fn::If": [
              {
                "Fn::Equals": [
                  "{{ invocationType }}",
                  "Async"
                ]
              },
              "true",
              "false"
            ]
          },
          "X-Fc-Stateful-Async-Invocation-Id": {
            "Fn::If": [
              {
                "Fn::Equals": [
                  "{{ invocationType }}",
                  "Async"
                ]
              },
              {
                "Fn::Replace": [
                  {
                    ".": "_"
                  },
                  "{{ ACS::ExecutionId }}"
                ]
              },
              ""
            ]
          }
        },
        "Parameters": {
          "AccountId": "{{ acs::accountid }}",
          "RegionId": "{{ regionId }}"
        },
        "Body": "{{event}}"
      },
      "Outputs": {
        "data": {
          "Type": "String",
          "ValueSelector": ".data"
        }
      }
    },
    {
      "Name": "waitForAsyncInvocation",
      "Action": "ACS::WaitFor",
      "Description": {
        "en": "Wait For AsyncInvocation Result",
        "zh-cn": "等待异步执行结果"
      },
      "When": {
        "Fn::Equals": [
          "{{ invocationType }}",
          "Async"
        ]
      },
      "MaxRetryInterval": 60,
      "Retries": 296,
      "DelayType": "Exponential",
      "Delay": 2,
      "BackOff": 2,
      "Properties": {
        "Service": "FC-OPEN",
        "API": "GetStatefulAsyncInvocation",
        "Method": "GET",
        "URI": {
          "Fn::Replace": [
            {
              ".": "_"
            },
            "/services/{{serviceName}}/functions/{{functionName}}/stateful-async-invocations/{{ACS::ExecutionId}}"
          ]
        },
        "Parameters": {
          "serviceName": "{{ serviceName }}",
          "functionName": "{{ functionName }}",
          "invocationId": {
            "Fn::Replace": [
              {
                ".": "_"
              },
              "{{ ACS::ExecutionId }}"
            ]
          },
          "AccountId": "{{ acs::accountid }}"
        },
        "PropertySelector": "status",
        "DesiredValues": [
          "Succeeded"
        ],
        "StopRetryValues": [
          "Invalid",
          "Expired",
          "Stopped",
          "Failed"
        ],
        "NotDesiredValues": []
      },
      "Outputs": {
        "invocationDetail": {
          "Type": "List",
          "ValueSelector": "events[] | select((.eventDetail // \"\") != \"\") | .eventDetail"
        }
      }
    }
  ],
  "Outputs": {
    "data": {
      "Type": "String",
      "Value": {
        "Fn::If": [
          {
            "Fn::Equals": [
              "{{ invocationType }}",
              "Async"
            ]
          },
          "{{ waitForAsyncInvocation.invocationDetail }}",
          "{{ invokeFunction.data }}"
        ]
      }
    }
  }
}